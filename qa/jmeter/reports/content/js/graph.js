/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1830.0, "series": [{"data": [[0.0, 6.0], [0.1, 311.0], [0.2, 351.0], [0.3, 380.0], [0.4, 421.0], [0.5, 470.0], [0.6, 525.0], [0.7, 559.0], [0.8, 589.0], [0.9, 616.0], [1.0, 647.0], [1.1, 665.0], [1.2, 695.0], [1.3, 740.0], [1.4, 752.0], [1.5, 760.0], [1.6, 764.0], [1.7, 767.0], [1.8, 771.0], [1.9, 774.0], [2.0, 777.0], [2.1, 779.0], [2.2, 781.0], [2.3, 783.0], [2.4, 785.0], [2.5, 787.0], [2.6, 788.0], [2.7, 790.0], [2.8, 791.0], [2.9, 793.0], [3.0, 796.0], [3.1, 798.0], [3.2, 800.0], [3.3, 803.0], [3.4, 806.0], [3.5, 808.0], [3.6, 810.0], [3.7, 812.0], [3.8, 814.0], [3.9, 815.0], [4.0, 816.0], [4.1, 817.0], [4.2, 818.0], [4.3, 819.0], [4.4, 820.0], [4.5, 821.0], [4.6, 822.0], [4.7, 822.0], [4.8, 823.0], [4.9, 824.0], [5.0, 825.0], [5.1, 826.0], [5.2, 827.0], [5.3, 827.0], [5.4, 828.0], [5.5, 829.0], [5.6, 830.0], [5.7, 831.0], [5.8, 833.0], [5.9, 834.0], [6.0, 835.0], [6.1, 836.0], [6.2, 837.0], [6.3, 838.0], [6.4, 840.0], [6.5, 841.0], [6.6, 843.0], [6.7, 844.0], [6.8, 846.0], [6.9, 847.0], [7.0, 848.0], [7.1, 849.0], [7.2, 851.0], [7.3, 852.0], [7.4, 852.0], [7.5, 853.0], [7.6, 854.0], [7.7, 855.0], [7.8, 856.0], [7.9, 857.0], [8.0, 857.0], [8.1, 858.0], [8.2, 859.0], [8.3, 860.0], [8.4, 860.0], [8.5, 861.0], [8.6, 861.0], [8.7, 862.0], [8.8, 862.0], [8.9, 863.0], [9.0, 864.0], [9.1, 864.0], [9.2, 865.0], [9.3, 865.0], [9.4, 866.0], [9.5, 866.0], [9.6, 867.0], [9.7, 867.0], [9.8, 867.0], [9.9, 868.0], [10.0, 868.0], [10.1, 869.0], [10.2, 869.0], [10.3, 870.0], [10.4, 870.0], [10.5, 870.0], [10.6, 871.0], [10.7, 871.0], [10.8, 871.0], [10.9, 872.0], [11.0, 872.0], [11.1, 873.0], [11.2, 873.0], [11.3, 873.0], [11.4, 874.0], [11.5, 874.0], [11.6, 874.0], [11.7, 875.0], [11.8, 875.0], [11.9, 875.0], [12.0, 876.0], [12.1, 876.0], [12.2, 876.0], [12.3, 877.0], [12.4, 877.0], [12.5, 877.0], [12.6, 878.0], [12.7, 878.0], [12.8, 878.0], [12.9, 879.0], [13.0, 879.0], [13.1, 879.0], [13.2, 880.0], [13.3, 880.0], [13.4, 880.0], [13.5, 881.0], [13.6, 881.0], [13.7, 881.0], [13.8, 881.0], [13.9, 882.0], [14.0, 882.0], [14.1, 882.0], [14.2, 883.0], [14.3, 883.0], [14.4, 883.0], [14.5, 884.0], [14.6, 884.0], [14.7, 884.0], [14.8, 884.0], [14.9, 885.0], [15.0, 885.0], [15.1, 885.0], [15.2, 885.0], [15.3, 886.0], [15.4, 886.0], [15.5, 886.0], [15.6, 887.0], [15.7, 887.0], [15.8, 887.0], [15.9, 887.0], [16.0, 888.0], [16.1, 888.0], [16.2, 888.0], [16.3, 888.0], [16.4, 889.0], [16.5, 889.0], [16.6, 889.0], [16.7, 889.0], [16.8, 890.0], [16.9, 890.0], [17.0, 890.0], [17.1, 890.0], [17.2, 891.0], [17.3, 891.0], [17.4, 891.0], [17.5, 891.0], [17.6, 891.0], [17.7, 892.0], [17.8, 892.0], [17.9, 892.0], [18.0, 892.0], [18.1, 893.0], [18.2, 893.0], [18.3, 893.0], [18.4, 893.0], [18.5, 894.0], [18.6, 894.0], [18.7, 894.0], [18.8, 894.0], [18.9, 894.0], [19.0, 895.0], [19.1, 895.0], [19.2, 895.0], [19.3, 895.0], [19.4, 895.0], [19.5, 896.0], [19.6, 896.0], [19.7, 896.0], [19.8, 896.0], [19.9, 896.0], [20.0, 896.0], [20.1, 897.0], [20.2, 897.0], [20.3, 897.0], [20.4, 897.0], [20.5, 897.0], [20.6, 897.0], [20.7, 898.0], [20.8, 898.0], [20.9, 898.0], [21.0, 898.0], [21.1, 898.0], [21.2, 898.0], [21.3, 898.0], [21.4, 899.0], [21.5, 899.0], [21.6, 899.0], [21.7, 899.0], [21.8, 899.0], [21.9, 899.0], [22.0, 899.0], [22.1, 900.0], [22.2, 900.0], [22.3, 900.0], [22.4, 900.0], [22.5, 900.0], [22.6, 900.0], [22.7, 901.0], [22.8, 901.0], [22.9, 901.0], [23.0, 901.0], [23.1, 901.0], [23.2, 901.0], [23.3, 901.0], [23.4, 901.0], [23.5, 902.0], [23.6, 902.0], [23.7, 902.0], [23.8, 902.0], [23.9, 902.0], [24.0, 902.0], [24.1, 902.0], [24.2, 902.0], [24.3, 903.0], [24.4, 903.0], [24.5, 903.0], [24.6, 903.0], [24.7, 903.0], [24.8, 903.0], [24.9, 903.0], [25.0, 903.0], [25.1, 904.0], [25.2, 904.0], [25.3, 904.0], [25.4, 904.0], [25.5, 904.0], [25.6, 904.0], [25.7, 904.0], [25.8, 904.0], [25.9, 904.0], [26.0, 905.0], [26.1, 905.0], [26.2, 905.0], [26.3, 905.0], [26.4, 905.0], [26.5, 905.0], [26.6, 905.0], [26.7, 905.0], [26.8, 905.0], [26.9, 906.0], [27.0, 906.0], [27.1, 906.0], [27.2, 906.0], [27.3, 906.0], [27.4, 906.0], [27.5, 906.0], [27.6, 906.0], [27.7, 906.0], [27.8, 907.0], [27.9, 907.0], [28.0, 907.0], [28.1, 907.0], [28.2, 907.0], [28.3, 907.0], [28.4, 907.0], [28.5, 907.0], [28.6, 907.0], [28.7, 907.0], [28.8, 908.0], [28.9, 908.0], [29.0, 908.0], [29.1, 908.0], [29.2, 908.0], [29.3, 908.0], [29.4, 908.0], [29.5, 908.0], [29.6, 908.0], [29.7, 909.0], [29.8, 909.0], [29.9, 909.0], [30.0, 909.0], [30.1, 909.0], [30.2, 909.0], [30.3, 909.0], [30.4, 909.0], [30.5, 909.0], [30.6, 910.0], [30.7, 910.0], [30.8, 910.0], [30.9, 910.0], [31.0, 910.0], [31.1, 910.0], [31.2, 910.0], [31.3, 910.0], [31.4, 910.0], [31.5, 910.0], [31.6, 911.0], [31.7, 911.0], [31.8, 911.0], [31.9, 911.0], [32.0, 911.0], [32.1, 911.0], [32.2, 911.0], [32.3, 911.0], [32.4, 911.0], [32.5, 911.0], [32.6, 912.0], [32.7, 912.0], [32.8, 912.0], [32.9, 912.0], [33.0, 912.0], [33.1, 912.0], [33.2, 912.0], [33.3, 912.0], [33.4, 912.0], [33.5, 912.0], [33.6, 913.0], [33.7, 913.0], [33.8, 913.0], [33.9, 913.0], [34.0, 913.0], [34.1, 913.0], [34.2, 913.0], [34.3, 913.0], [34.4, 913.0], [34.5, 913.0], [34.6, 913.0], [34.7, 914.0], [34.8, 914.0], [34.9, 914.0], [35.0, 914.0], [35.1, 914.0], [35.2, 914.0], [35.3, 914.0], [35.4, 914.0], [35.5, 914.0], [35.6, 915.0], [35.7, 915.0], [35.8, 915.0], [35.9, 915.0], [36.0, 915.0], [36.1, 915.0], [36.2, 915.0], [36.3, 915.0], [36.4, 915.0], [36.5, 915.0], [36.6, 915.0], [36.7, 916.0], [36.8, 916.0], [36.9, 916.0], [37.0, 916.0], [37.1, 916.0], [37.2, 916.0], [37.3, 916.0], [37.4, 916.0], [37.5, 916.0], [37.6, 916.0], [37.7, 917.0], [37.8, 917.0], [37.9, 917.0], [38.0, 917.0], [38.1, 917.0], [38.2, 917.0], [38.3, 917.0], [38.4, 917.0], [38.5, 917.0], [38.6, 917.0], [38.7, 917.0], [38.8, 918.0], [38.9, 918.0], [39.0, 918.0], [39.1, 918.0], [39.2, 918.0], [39.3, 918.0], [39.4, 918.0], [39.5, 918.0], [39.6, 918.0], [39.7, 918.0], [39.8, 919.0], [39.9, 919.0], [40.0, 919.0], [40.1, 919.0], [40.2, 919.0], [40.3, 919.0], [40.4, 919.0], [40.5, 919.0], [40.6, 919.0], [40.7, 919.0], [40.8, 920.0], [40.9, 920.0], [41.0, 920.0], [41.1, 920.0], [41.2, 920.0], [41.3, 920.0], [41.4, 920.0], [41.5, 920.0], [41.6, 920.0], [41.7, 920.0], [41.8, 920.0], [41.9, 921.0], [42.0, 921.0], [42.1, 921.0], [42.2, 921.0], [42.3, 921.0], [42.4, 921.0], [42.5, 921.0], [42.6, 921.0], [42.7, 921.0], [42.8, 921.0], [42.9, 922.0], [43.0, 922.0], [43.1, 922.0], [43.2, 922.0], [43.3, 922.0], [43.4, 922.0], [43.5, 922.0], [43.6, 922.0], [43.7, 922.0], [43.8, 922.0], [43.9, 922.0], [44.0, 923.0], [44.1, 923.0], [44.2, 923.0], [44.3, 923.0], [44.4, 923.0], [44.5, 923.0], [44.6, 923.0], [44.7, 923.0], [44.8, 923.0], [44.9, 923.0], [45.0, 924.0], [45.1, 924.0], [45.2, 924.0], [45.3, 924.0], [45.4, 924.0], [45.5, 924.0], [45.6, 924.0], [45.7, 924.0], [45.8, 924.0], [45.9, 925.0], [46.0, 925.0], [46.1, 925.0], [46.2, 925.0], [46.3, 925.0], [46.4, 925.0], [46.5, 925.0], [46.6, 925.0], [46.7, 925.0], [46.8, 925.0], [46.9, 926.0], [47.0, 926.0], [47.1, 926.0], [47.2, 926.0], [47.3, 926.0], [47.4, 926.0], [47.5, 926.0], [47.6, 926.0], [47.7, 926.0], [47.8, 927.0], [47.9, 927.0], [48.0, 927.0], [48.1, 927.0], [48.2, 927.0], [48.3, 927.0], [48.4, 927.0], [48.5, 927.0], [48.6, 927.0], [48.7, 927.0], [48.8, 928.0], [48.9, 928.0], [49.0, 928.0], [49.1, 928.0], [49.2, 928.0], [49.3, 928.0], [49.4, 928.0], [49.5, 928.0], [49.6, 928.0], [49.7, 928.0], [49.8, 929.0], [49.9, 929.0], [50.0, 929.0], [50.1, 929.0], [50.2, 929.0], [50.3, 929.0], [50.4, 929.0], [50.5, 929.0], [50.6, 929.0], [50.7, 929.0], [50.8, 930.0], [50.9, 930.0], [51.0, 930.0], [51.1, 930.0], [51.2, 930.0], [51.3, 930.0], [51.4, 930.0], [51.5, 930.0], [51.6, 930.0], [51.7, 930.0], [51.8, 931.0], [51.9, 931.0], [52.0, 931.0], [52.1, 931.0], [52.2, 931.0], [52.3, 931.0], [52.4, 931.0], [52.5, 931.0], [52.6, 931.0], [52.7, 931.0], [52.8, 932.0], [52.9, 932.0], [53.0, 932.0], [53.1, 932.0], [53.2, 932.0], [53.3, 932.0], [53.4, 932.0], [53.5, 932.0], [53.6, 932.0], [53.7, 932.0], [53.8, 932.0], [53.9, 933.0], [54.0, 933.0], [54.1, 933.0], [54.2, 933.0], [54.3, 933.0], [54.4, 933.0], [54.5, 933.0], [54.6, 933.0], [54.7, 933.0], [54.8, 933.0], [54.9, 934.0], [55.0, 934.0], [55.1, 934.0], [55.2, 934.0], [55.3, 934.0], [55.4, 934.0], [55.5, 934.0], [55.6, 934.0], [55.7, 934.0], [55.8, 934.0], [55.9, 935.0], [56.0, 935.0], [56.1, 935.0], [56.2, 935.0], [56.3, 935.0], [56.4, 935.0], [56.5, 935.0], [56.6, 935.0], [56.7, 935.0], [56.8, 936.0], [56.9, 936.0], [57.0, 936.0], [57.1, 936.0], [57.2, 936.0], [57.3, 936.0], [57.4, 936.0], [57.5, 936.0], [57.6, 936.0], [57.7, 936.0], [57.8, 937.0], [57.9, 937.0], [58.0, 937.0], [58.1, 937.0], [58.2, 937.0], [58.3, 937.0], [58.4, 937.0], [58.5, 937.0], [58.6, 937.0], [58.7, 937.0], [58.8, 938.0], [58.9, 938.0], [59.0, 938.0], [59.1, 938.0], [59.2, 938.0], [59.3, 938.0], [59.4, 938.0], [59.5, 938.0], [59.6, 938.0], [59.7, 938.0], [59.8, 939.0], [59.9, 939.0], [60.0, 939.0], [60.1, 939.0], [60.2, 939.0], [60.3, 939.0], [60.4, 939.0], [60.5, 939.0], [60.6, 939.0], [60.7, 940.0], [60.8, 940.0], [60.9, 940.0], [61.0, 940.0], [61.1, 940.0], [61.2, 940.0], [61.3, 940.0], [61.4, 940.0], [61.5, 940.0], [61.6, 941.0], [61.7, 941.0], [61.8, 941.0], [61.9, 941.0], [62.0, 941.0], [62.1, 941.0], [62.2, 941.0], [62.3, 941.0], [62.4, 942.0], [62.5, 942.0], [62.6, 942.0], [62.7, 942.0], [62.8, 942.0], [62.9, 942.0], [63.0, 942.0], [63.1, 942.0], [63.2, 943.0], [63.3, 943.0], [63.4, 943.0], [63.5, 943.0], [63.6, 943.0], [63.7, 943.0], [63.8, 943.0], [63.9, 943.0], [64.0, 943.0], [64.1, 944.0], [64.2, 944.0], [64.3, 944.0], [64.4, 944.0], [64.5, 944.0], [64.6, 944.0], [64.7, 944.0], [64.8, 944.0], [64.9, 945.0], [65.0, 945.0], [65.1, 945.0], [65.2, 945.0], [65.3, 945.0], [65.4, 945.0], [65.5, 945.0], [65.6, 945.0], [65.7, 945.0], [65.8, 946.0], [65.9, 946.0], [66.0, 946.0], [66.1, 946.0], [66.2, 946.0], [66.3, 946.0], [66.4, 946.0], [66.5, 946.0], [66.6, 946.0], [66.7, 947.0], [66.8, 947.0], [66.9, 947.0], [67.0, 947.0], [67.1, 947.0], [67.2, 947.0], [67.3, 947.0], [67.4, 947.0], [67.5, 948.0], [67.6, 948.0], [67.7, 948.0], [67.8, 948.0], [67.9, 948.0], [68.0, 948.0], [68.1, 948.0], [68.2, 949.0], [68.3, 949.0], [68.4, 949.0], [68.5, 949.0], [68.6, 949.0], [68.7, 949.0], [68.8, 949.0], [68.9, 949.0], [69.0, 949.0], [69.1, 950.0], [69.2, 950.0], [69.3, 950.0], [69.4, 950.0], [69.5, 950.0], [69.6, 950.0], [69.7, 950.0], [69.8, 951.0], [69.9, 951.0], [70.0, 951.0], [70.1, 951.0], [70.2, 951.0], [70.3, 951.0], [70.4, 951.0], [70.5, 951.0], [70.6, 952.0], [70.7, 952.0], [70.8, 952.0], [70.9, 952.0], [71.0, 952.0], [71.1, 952.0], [71.2, 952.0], [71.3, 952.0], [71.4, 953.0], [71.5, 953.0], [71.6, 953.0], [71.7, 953.0], [71.8, 953.0], [71.9, 953.0], [72.0, 953.0], [72.1, 953.0], [72.2, 954.0], [72.3, 954.0], [72.4, 954.0], [72.5, 954.0], [72.6, 954.0], [72.7, 954.0], [72.8, 954.0], [72.9, 955.0], [73.0, 955.0], [73.1, 955.0], [73.2, 955.0], [73.3, 955.0], [73.4, 955.0], [73.5, 955.0], [73.6, 956.0], [73.7, 956.0], [73.8, 956.0], [73.9, 956.0], [74.0, 956.0], [74.1, 956.0], [74.2, 956.0], [74.3, 956.0], [74.4, 957.0], [74.5, 957.0], [74.6, 957.0], [74.7, 957.0], [74.8, 957.0], [74.9, 957.0], [75.0, 957.0], [75.1, 957.0], [75.2, 958.0], [75.3, 958.0], [75.4, 958.0], [75.5, 958.0], [75.6, 958.0], [75.7, 958.0], [75.8, 958.0], [75.9, 959.0], [76.0, 959.0], [76.1, 959.0], [76.2, 959.0], [76.3, 959.0], [76.4, 959.0], [76.5, 959.0], [76.6, 959.0], [76.7, 960.0], [76.8, 960.0], [76.9, 960.0], [77.0, 960.0], [77.1, 960.0], [77.2, 960.0], [77.3, 960.0], [77.4, 961.0], [77.5, 961.0], [77.6, 961.0], [77.7, 961.0], [77.8, 961.0], [77.9, 961.0], [78.0, 961.0], [78.1, 962.0], [78.2, 962.0], [78.3, 962.0], [78.4, 962.0], [78.5, 962.0], [78.6, 962.0], [78.7, 962.0], [78.8, 963.0], [78.9, 963.0], [79.0, 963.0], [79.1, 963.0], [79.2, 963.0], [79.3, 963.0], [79.4, 963.0], [79.5, 964.0], [79.6, 964.0], [79.7, 964.0], [79.8, 964.0], [79.9, 964.0], [80.0, 964.0], [80.1, 965.0], [80.2, 965.0], [80.3, 965.0], [80.4, 965.0], [80.5, 965.0], [80.6, 965.0], [80.7, 965.0], [80.8, 966.0], [80.9, 966.0], [81.0, 966.0], [81.1, 966.0], [81.2, 966.0], [81.3, 966.0], [81.4, 967.0], [81.5, 967.0], [81.6, 967.0], [81.7, 967.0], [81.8, 967.0], [81.9, 968.0], [82.0, 968.0], [82.1, 968.0], [82.2, 968.0], [82.3, 968.0], [82.4, 968.0], [82.5, 969.0], [82.6, 969.0], [82.7, 969.0], [82.8, 969.0], [82.9, 969.0], [83.0, 970.0], [83.1, 970.0], [83.2, 970.0], [83.3, 970.0], [83.4, 970.0], [83.5, 971.0], [83.6, 971.0], [83.7, 971.0], [83.8, 971.0], [83.9, 971.0], [84.0, 972.0], [84.1, 972.0], [84.2, 972.0], [84.3, 972.0], [84.4, 972.0], [84.5, 973.0], [84.6, 973.0], [84.7, 973.0], [84.8, 973.0], [84.9, 973.0], [85.0, 974.0], [85.1, 974.0], [85.2, 974.0], [85.3, 974.0], [85.4, 974.0], [85.5, 975.0], [85.6, 975.0], [85.7, 975.0], [85.8, 975.0], [85.9, 976.0], [86.0, 976.0], [86.1, 976.0], [86.2, 977.0], [86.3, 977.0], [86.4, 977.0], [86.5, 977.0], [86.6, 977.0], [86.7, 978.0], [86.8, 978.0], [86.9, 978.0], [87.0, 978.0], [87.1, 979.0], [87.2, 979.0], [87.3, 979.0], [87.4, 979.0], [87.5, 980.0], [87.6, 980.0], [87.7, 980.0], [87.8, 980.0], [87.9, 981.0], [88.0, 981.0], [88.1, 981.0], [88.2, 982.0], [88.3, 982.0], [88.4, 982.0], [88.5, 982.0], [88.6, 983.0], [88.7, 983.0], [88.8, 983.0], [88.9, 983.0], [89.0, 984.0], [89.1, 984.0], [89.2, 984.0], [89.3, 984.0], [89.4, 985.0], [89.5, 985.0], [89.6, 985.0], [89.7, 986.0], [89.8, 986.0], [89.9, 986.0], [90.0, 987.0], [90.1, 987.0], [90.2, 987.0], [90.3, 988.0], [90.4, 988.0], [90.5, 989.0], [90.6, 989.0], [90.7, 989.0], [90.8, 990.0], [90.9, 990.0], [91.0, 990.0], [91.1, 991.0], [91.2, 991.0], [91.3, 991.0], [91.4, 992.0], [91.5, 992.0], [91.6, 993.0], [91.7, 993.0], [91.8, 994.0], [91.9, 994.0], [92.0, 994.0], [92.1, 995.0], [92.2, 995.0], [92.3, 996.0], [92.4, 996.0], [92.5, 997.0], [92.6, 997.0], [92.7, 998.0], [92.8, 998.0], [92.9, 999.0], [93.0, 999.0], [93.1, 1000.0], [93.2, 1000.0], [93.3, 1001.0], [93.4, 1001.0], [93.5, 1002.0], [93.6, 1002.0], [93.7, 1003.0], [93.8, 1003.0], [93.9, 1004.0], [94.0, 1004.0], [94.1, 1005.0], [94.2, 1005.0], [94.3, 1006.0], [94.4, 1006.0], [94.5, 1007.0], [94.6, 1007.0], [94.7, 1008.0], [94.8, 1009.0], [94.9, 1010.0], [95.0, 1010.0], [95.1, 1011.0], [95.2, 1012.0], [95.3, 1013.0], [95.4, 1014.0], [95.5, 1015.0], [95.6, 1016.0], [95.7, 1017.0], [95.8, 1019.0], [95.9, 1020.0], [96.0, 1022.0], [96.1, 1023.0], [96.2, 1024.0], [96.3, 1026.0], [96.4, 1027.0], [96.5, 1029.0], [96.6, 1032.0], [96.7, 1034.0], [96.8, 1037.0], [96.9, 1042.0], [97.0, 1048.0], [97.1, 1055.0], [97.2, 1069.0], [97.3, 1093.0], [97.4, 1118.0], [97.5, 1154.0], [97.6, 1196.0], [97.7, 1232.0], [97.8, 1253.0], [97.9, 1268.0], [98.0, 1286.0], [98.1, 1314.0], [98.2, 1355.0], [98.3, 1396.0], [98.4, 1429.0], [98.5, 1471.0], [98.6, 1507.0], [98.7, 1544.0], [98.8, 1561.0], [98.9, 1569.0], [99.0, 1581.0], [99.1, 1595.0], [99.2, 1617.0], [99.3, 1632.0], [99.4, 1650.0], [99.5, 1667.0], [99.6, 1684.0], [99.7, 1697.0], [99.8, 1710.0], [99.9, 1720.0], [100.0, 1830.0]], "isOverall": false, "label": "dynamic: hello world", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 5.0], [26.5, 5.0], [26.6, 5.0], [26.7, 5.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 5.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 6.0], [65.8, 6.0], [65.9, 6.0], [66.0, 6.0], [66.1, 6.0], [66.2, 6.0], [66.3, 6.0], [66.4, 6.0], [66.5, 6.0], [66.6, 6.0], [66.7, 6.0], [66.8, 6.0], [66.9, 6.0], [67.0, 6.0], [67.1, 6.0], [67.2, 6.0], [67.3, 6.0], [67.4, 6.0], [67.5, 6.0], [67.6, 6.0], [67.7, 6.0], [67.8, 6.0], [67.9, 6.0], [68.0, 6.0], [68.1, 6.0], [68.2, 6.0], [68.3, 6.0], [68.4, 6.0], [68.5, 6.0], [68.6, 6.0], [68.7, 6.0], [68.8, 6.0], [68.9, 6.0], [69.0, 6.0], [69.1, 6.0], [69.2, 6.0], [69.3, 6.0], [69.4, 6.0], [69.5, 6.0], [69.6, 6.0], [69.7, 6.0], [69.8, 6.0], [69.9, 6.0], [70.0, 6.0], [70.1, 6.0], [70.2, 6.0], [70.3, 6.0], [70.4, 6.0], [70.5, 6.0], [70.6, 6.0], [70.7, 6.0], [70.8, 6.0], [70.9, 6.0], [71.0, 6.0], [71.1, 6.0], [71.2, 6.0], [71.3, 6.0], [71.4, 6.0], [71.5, 6.0], [71.6, 6.0], [71.7, 6.0], [71.8, 6.0], [71.9, 6.0], [72.0, 6.0], [72.1, 6.0], [72.2, 6.0], [72.3, 6.0], [72.4, 6.0], [72.5, 6.0], [72.6, 6.0], [72.7, 6.0], [72.8, 6.0], [72.9, 6.0], [73.0, 7.0], [73.1, 7.0], [73.2, 7.0], [73.3, 7.0], [73.4, 7.0], [73.5, 7.0], [73.6, 7.0], [73.7, 7.0], [73.8, 7.0], [73.9, 7.0], [74.0, 7.0], [74.1, 7.0], [74.2, 7.0], [74.3, 7.0], [74.4, 7.0], [74.5, 7.0], [74.6, 7.0], [74.7, 7.0], [74.8, 7.0], [74.9, 7.0], [75.0, 7.0], [75.1, 7.0], [75.2, 7.0], [75.3, 7.0], [75.4, 7.0], [75.5, 7.0], [75.6, 7.0], [75.7, 7.0], [75.8, 7.0], [75.9, 7.0], [76.0, 7.0], [76.1, 7.0], [76.2, 7.0], [76.3, 7.0], [76.4, 7.0], [76.5, 7.0], [76.6, 7.0], [76.7, 7.0], [76.8, 7.0], [76.9, 7.0], [77.0, 7.0], [77.1, 7.0], [77.2, 7.0], [77.3, 7.0], [77.4, 7.0], [77.5, 7.0], [77.6, 7.0], [77.7, 7.0], [77.8, 7.0], [77.9, 7.0], [78.0, 7.0], [78.1, 7.0], [78.2, 7.0], [78.3, 7.0], [78.4, 7.0], [78.5, 7.0], [78.6, 7.0], [78.7, 7.0], [78.8, 7.0], [78.9, 7.0], [79.0, 7.0], [79.1, 7.0], [79.2, 7.0], [79.3, 7.0], [79.4, 7.0], [79.5, 7.0], [79.6, 7.0], [79.7, 7.0], [79.8, 7.0], [79.9, 7.0], [80.0, 7.0], [80.1, 7.0], [80.2, 7.0], [80.3, 7.0], [80.4, 7.0], [80.5, 7.0], [80.6, 7.0], [80.7, 7.0], [80.8, 7.0], [80.9, 7.0], [81.0, 7.0], [81.1, 7.0], [81.2, 7.0], [81.3, 7.0], [81.4, 7.0], [81.5, 7.0], [81.6, 7.0], [81.7, 7.0], [81.8, 7.0], [81.9, 7.0], [82.0, 7.0], [82.1, 7.0], [82.2, 7.0], [82.3, 7.0], [82.4, 7.0], [82.5, 7.0], [82.6, 7.0], [82.7, 7.0], [82.8, 7.0], [82.9, 7.0], [83.0, 7.0], [83.1, 7.0], [83.2, 7.0], [83.3, 7.0], [83.4, 7.0], [83.5, 7.0], [83.6, 7.0], [83.7, 7.0], [83.8, 7.0], [83.9, 7.0], [84.0, 7.0], [84.1, 7.0], [84.2, 7.0], [84.3, 7.0], [84.4, 7.0], [84.5, 7.0], [84.6, 7.0], [84.7, 7.0], [84.8, 7.0], [84.9, 7.0], [85.0, 7.0], [85.1, 7.0], [85.2, 7.0], [85.3, 7.0], [85.4, 7.0], [85.5, 8.0], [85.6, 8.0], [85.7, 8.0], [85.8, 8.0], [85.9, 8.0], [86.0, 8.0], [86.1, 8.0], [86.2, 8.0], [86.3, 8.0], [86.4, 8.0], [86.5, 8.0], [86.6, 8.0], [86.7, 8.0], [86.8, 8.0], [86.9, 8.0], [87.0, 8.0], [87.1, 8.0], [87.2, 8.0], [87.3, 8.0], [87.4, 8.0], [87.5, 8.0], [87.6, 8.0], [87.7, 8.0], [87.8, 8.0], [87.9, 8.0], [88.0, 8.0], [88.1, 8.0], [88.2, 8.0], [88.3, 8.0], [88.4, 8.0], [88.5, 8.0], [88.6, 8.0], [88.7, 8.0], [88.8, 8.0], [88.9, 8.0], [89.0, 8.0], [89.1, 8.0], [89.2, 8.0], [89.3, 8.0], [89.4, 8.0], [89.5, 8.0], [89.6, 8.0], [89.7, 8.0], [89.8, 8.0], [89.9, 8.0], [90.0, 8.0], [90.1, 8.0], [90.2, 8.0], [90.3, 8.0], [90.4, 8.0], [90.5, 8.0], [90.6, 8.0], [90.7, 8.0], [90.8, 8.0], [90.9, 8.0], [91.0, 8.0], [91.1, 8.0], [91.2, 9.0], [91.3, 9.0], [91.4, 9.0], [91.5, 9.0], [91.6, 9.0], [91.7, 9.0], [91.8, 9.0], [91.9, 9.0], [92.0, 9.0], [92.1, 9.0], [92.2, 9.0], [92.3, 9.0], [92.4, 9.0], [92.5, 9.0], [92.6, 9.0], [92.7, 9.0], [92.8, 9.0], [92.9, 9.0], [93.0, 9.0], [93.1, 9.0], [93.2, 9.0], [93.3, 9.0], [93.4, 9.0], [93.5, 9.0], [93.6, 10.0], [93.7, 10.0], [93.8, 10.0], [93.9, 10.0], [94.0, 10.0], [94.1, 10.0], [94.2, 10.0], [94.3, 10.0], [94.4, 10.0], [94.5, 10.0], [94.6, 10.0], [94.7, 10.0], [94.8, 10.0], [94.9, 11.0], [95.0, 11.0], [95.1, 11.0], [95.2, 11.0], [95.3, 11.0], [95.4, 11.0], [95.5, 11.0], [95.6, 11.0], [95.7, 12.0], [95.8, 12.0], [95.9, 12.0], [96.0, 12.0], [96.1, 12.0], [96.2, 13.0], [96.3, 13.0], [96.4, 13.0], [96.5, 13.0], [96.6, 14.0], [96.7, 14.0], [96.8, 14.0], [96.9, 15.0], [97.0, 15.0], [97.1, 15.0], [97.2, 16.0], [97.3, 16.0], [97.4, 17.0], [97.5, 17.0], [97.6, 18.0], [97.7, 19.0], [97.8, 20.0], [97.9, 21.0], [98.0, 22.0], [98.1, 23.0], [98.2, 25.0], [98.3, 26.0], [98.4, 27.0], [98.5, 28.0], [98.6, 29.0], [98.7, 30.0], [98.8, 31.0], [98.9, 33.0], [99.0, 36.0], [99.1, 42.0], [99.2, 51.0], [99.3, 64.0], [99.4, 86.0], [99.5, 103.0], [99.6, 131.0], [99.7, 182.0], [99.8, 265.0], [99.9, 475.0], [100.0, 668.0]], "isOverall": false, "label": "static: get from cache", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 2.0], [92.1, 2.0], [92.2, 2.0], [92.3, 2.0], [92.4, 2.0], [92.5, 2.0], [92.6, 2.0], [92.7, 2.0], [92.8, 2.0], [92.9, 2.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 2.0], [95.1, 2.0], [95.2, 2.0], [95.3, 2.0], [95.4, 2.0], [95.5, 2.0], [95.6, 2.0], [95.7, 3.0], [95.8, 3.0], [95.9, 3.0], [96.0, 3.0], [96.1, 3.0], [96.2, 3.0], [96.3, 3.0], [96.4, 3.0], [96.5, 3.0], [96.6, 3.0], [96.7, 3.0], [96.8, 3.0], [96.9, 3.0], [97.0, 3.0], [97.1, 4.0], [97.2, 4.0], [97.3, 4.0], [97.4, 4.0], [97.5, 4.0], [97.6, 5.0], [97.7, 5.0], [97.8, 6.0], [97.9, 7.0], [98.0, 8.0], [98.1, 9.0], [98.2, 10.0], [98.3, 11.0], [98.4, 13.0], [98.5, 14.0], [98.6, 16.0], [98.7, 18.0], [98.8, 20.0], [98.9, 22.0], [99.0, 24.0], [99.1, 25.0], [99.2, 27.0], [99.3, 29.0], [99.4, 33.0], [99.5, 41.0], [99.6, 60.0], [99.7, 81.0], [99.8, 113.0], [99.9, 294.0], [100.0, 521.0]], "isOverall": false, "label": "static: get medium file", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 99767.0, "series": [{"data": [[0.0, 16.0], [600.0, 374.0], [700.0, 1940.0], [200.0, 45.0], [800.0, 18856.0], [900.0, 71078.0], [1000.0, 4251.0], [1100.0, 269.0], [300.0, 266.0], [1200.0, 453.0], [1300.0, 247.0], [1400.0, 268.0], [1500.0, 547.0], [100.0, 20.0], [400.0, 194.0], [1600.0, 589.0], [1700.0, 282.0], [1800.0, 7.0], [500.0, 298.0]], "isOverall": false, "label": "dynamic: hello world", "isController": false}, {"data": [[0.0, 99472.0], [300.0, 30.0], [600.0, 16.0], [100.0, 255.0], [200.0, 102.0], [400.0, 45.0], [500.0, 80.0]], "isOverall": false, "label": "static: get from cache", "isController": false}, {"data": [[0.0, 99767.0], [300.0, 23.0], [100.0, 88.0], [200.0, 48.0], [400.0, 62.0], [500.0, 12.0]], "isOverall": false, "label": "static: get medium file", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1418.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 200435.0, "series": [{"data": [[0.0, 200435.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 98147.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1418.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 972.3127214303389, "minX": 1.67058444E12, "maxY": 1000.0, "series": [{"data": [[1.6705845E12, 1000.0], [1.67058456E12, 972.3127214303389], [1.67058444E12, 980.1034597637979]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67058456E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 1029.0, "series": [{"data": [[3.0, 282.3333333333333], [4.0, 301.0], [6.0, 308.0], [7.0, 295.0], [8.0, 303.0], [9.0, 290.0], [10.0, 285.0], [14.0, 285.0], [15.0, 302.0], [18.0, 313.1666666666667], [25.0, 311.2857142857143], [26.0, 299.0], [27.0, 306.0], [28.0, 307.0], [29.0, 311.0], [33.0, 330.25], [35.0, 341.0], [34.0, 339.0], [39.0, 325.0], [38.0, 328.3333333333333], [41.0, 325.0], [45.0, 340.0], [44.0, 334.3333333333333], [46.0, 332.0], [49.0, 336.0], [48.0, 331.0], [51.0, 335.5], [55.0, 332.0], [54.0, 343.3333333333333], [59.0, 337.0], [58.0, 335.6666666666667], [61.0, 342.5], [63.0, 341.0], [65.0, 348.0], [70.0, 354.0], [68.0, 337.0], [73.0, 365.0], [72.0, 355.5], [79.0, 386.0], [78.0, 367.0], [77.0, 363.0], [76.0, 356.3333333333333], [81.0, 357.0], [80.0, 376.0], [87.0, 362.0], [91.0, 373.0], [90.0, 393.0], [89.0, 378.0], [88.0, 377.0], [95.0, 391.3333333333333], [98.0, 392.0], [97.0, 380.3333333333333], [102.0, 383.0], [101.0, 375.3333333333333], [105.0, 400.0], [111.0, 429.0], [110.0, 378.0], [109.0, 390.0], [108.0, 384.2], [115.0, 413.0], [113.0, 385.0], [112.0, 385.0], [119.0, 411.25], [116.0, 387.0], [122.0, 408.0], [134.0, 423.0], [133.0, 421.0], [132.0, 423.0], [129.0, 418.85714285714283], [142.0, 431.6666666666667], [139.0, 431.4], [146.0, 425.0], [145.0, 426.0], [144.0, 436.0], [157.0, 438.0], [156.0, 502.0], [155.0, 452.3333333333333], [152.0, 437.33333333333337], [167.0, 457.0], [166.0, 452.4], [161.0, 445.0], [160.0, 452.6666666666667], [174.0, 452.6], [169.0, 447.0], [168.0, 447.0], [178.0, 477.0], [177.0, 477.6666666666667], [191.0, 489.0], [188.0, 525.0], [187.0, 485.3333333333333], [184.0, 486.0], [199.0, 495.0], [198.0, 494.0], [194.0, 491.6666666666667], [200.0, 509.0], [213.0, 503.5], [212.0, 497.0], [211.0, 502.0], [209.0, 515.0], [208.0, 495.12499999999994], [223.0, 509.5], [221.0, 514.5], [219.0, 530.0], [218.0, 509.2], [231.0, 519.0], [230.0, 520.0], [229.0, 514.6], [226.0, 508.0], [239.0, 525.0], [238.0, 521.0], [234.0, 518.0], [233.0, 530.0], [232.0, 518.0], [245.0, 530.0], [244.0, 525.0], [243.0, 524.3333333333334], [240.0, 518.0], [255.0, 528.0], [254.0, 531.0], [252.0, 523.6666666666666], [249.0, 525.0], [248.0, 526.0], [271.0, 533.0], [270.0, 535.6666666666666], [267.0, 537.0], [264.0, 531.6666666666666], [261.0, 528.3333333333334], [258.0, 530.3333333333334], [286.0, 534.0], [285.0, 537.0], [282.0, 535.0], [281.0, 536.5], [277.0, 535.5], [276.0, 533.0], [274.0, 534.5], [272.0, 528.0], [302.0, 541.0], [299.0, 538.0], [298.0, 542.5], [296.0, 541.75], [292.0, 544.0], [290.0, 537.6666666666666], [317.0, 560.0], [315.0, 541.5], [311.0, 540.0], [310.0, 543.0], [308.0, 553.0], [306.0, 539.5], [334.0, 573.0], [335.0, 568.5], [333.0, 560.6], [331.0, 555.0], [329.0, 564.5], [327.0, 553.0], [325.0, 559.0], [324.0, 557.3333333333334], [321.0, 563.5], [320.0, 553.0], [350.0, 576.0], [351.0, 578.0], [349.0, 583.0], [348.0, 577.0], [347.0, 576.75], [346.0, 577.25], [345.0, 572.0], [341.0, 578.0], [336.0, 563.0], [338.0, 567.0], [337.0, 580.0], [365.0, 572.5], [366.0, 576.0], [364.0, 580.0], [355.0, 578.75], [353.0, 602.0], [352.0, 570.0], [363.0, 573.0], [362.0, 570.0], [361.0, 570.0], [360.0, 572.0], [359.0, 569.0], [358.0, 576.25], [357.0, 569.0], [356.0, 586.0], [382.0, 608.6666666666666], [381.0, 598.1428571428572], [371.0, 585.0], [370.0, 587.7142857142858], [379.0, 597.5], [378.0, 600.0], [377.0, 593.0], [376.0, 595.0], [375.0, 587.5], [374.0, 586.5], [372.0, 597.0], [397.0, 611.5], [396.0, 613.0], [395.0, 599.0], [394.0, 607.0], [393.0, 604.75], [392.0, 616.0], [390.0, 606.3333333333334], [388.0, 601.25], [387.0, 602.0], [386.0, 596.6666666666666], [385.0, 602.0], [384.0, 596.1666666666667], [403.0, 614.5], [414.0, 621.6666666666666], [412.0, 619.75], [411.0, 625.75], [408.0, 633.5], [407.0, 611.6666666666666], [405.0, 614.5], [404.0, 620.0], [402.0, 631.0], [401.0, 616.0], [400.0, 615.3333333333334], [429.0, 652.0], [430.0, 637.0], [428.0, 642.0], [418.0, 626.9999999999999], [416.0, 629.3333333333334], [427.0, 655.0], [426.0, 634.6666666666666], [424.0, 630.0], [423.0, 635.0], [422.0, 629.0], [421.0, 638.0], [420.0, 636.0], [445.0, 657.25], [447.0, 657.25], [444.0, 665.75], [443.0, 654.3333333333334], [441.0, 658.0], [440.0, 655.0], [438.0, 650.6666666666666], [436.0, 645.3333333333334], [435.0, 650.0], [434.0, 652.0], [433.0, 639.5], [460.0, 682.0], [462.0, 676.0], [463.0, 676.0], [461.0, 670.0], [459.0, 660.0], [457.0, 666.0], [455.0, 666.0], [449.0, 665.0], [451.0, 661.6666666666666], [450.0, 677.0], [454.0, 683.0], [453.0, 679.5], [452.0, 663.0], [478.0, 686.0], [479.0, 677.0], [476.0, 688.0], [475.0, 672.0], [474.0, 684.25], [471.0, 685.0], [470.0, 676.6666666666666], [468.0, 670.8], [464.0, 667.0], [495.0, 692.0], [492.0, 698.0], [482.0, 684.0], [491.0, 714.0], [490.0, 702.0], [489.0, 690.6666666666666], [487.0, 692.0], [486.0, 694.0], [485.0, 689.5], [484.0, 692.0], [510.0, 732.0], [500.0, 661.8888888888889], [501.0, 720.5], [502.0, 251.0], [509.0, 171.0], [511.0, 550.6666666666667], [508.0, 735.0], [499.0, 714.6666666666666], [497.0, 724.5], [507.0, 718.0], [506.0, 728.0], [505.0, 734.0], [504.0, 722.3333333333334], [541.0, 745.0], [513.0, 546.0], [514.0, 453.5], [516.0, 746.25], [518.0, 747.0], [517.0, 740.0], [521.0, 513.6], [520.0, 743.3333333333334], [522.0, 742.0], [525.0, 180.33333333333334], [527.0, 747.5714285714286], [512.0, 740.0], [532.0, 183.0], [533.0, 178.0], [535.0, 772.0], [534.0, 756.4285714285714], [542.0, 750.3333333333334], [529.0, 745.0], [528.0, 750.0], [538.0, 765.0], [537.0, 771.0], [550.0, 472.0], [548.0, 190.0], [549.0, 697.2222222222222], [553.0, 424.0], [552.0, 744.5], [556.0, 750.0], [555.0, 752.5], [557.0, 569.6666666666666], [559.0, 748.25], [544.0, 753.0], [547.0, 767.0], [545.0, 766.0], [562.0, 572.3333333333334], [561.0, 752.0], [560.0, 748.25], [565.0, 753.3333333333334], [564.0, 750.0], [567.0, 753.6666666666666], [566.0, 755.6666666666666], [568.0, 483.5], [551.0, 742.5], [572.0, 757.0], [570.0, 750.0], [575.0, 754.5], [574.0, 756.0], [573.0, 750.8], [605.0, 431.33333333333337], [577.0, 653.2], [579.0, 752.5], [589.0, 761.0], [588.0, 759.5], [587.0, 752.4], [586.0, 749.0], [585.0, 763.0], [584.0, 758.6666666666666], [580.0, 488.0], [594.0, 272.0], [597.0, 422.33333333333337], [596.0, 760.5], [599.0, 756.5], [598.0, 761.0], [600.0, 257.0], [582.0, 759.0], [581.0, 753.3333333333334], [602.0, 758.0], [601.0, 755.75], [606.0, 624.1428571428571], [607.0, 761.0], [592.0, 756.25], [604.0, 770.0], [603.0, 758.0], [636.0, 727.3636363636364], [618.0, 261.0], [617.0, 768.5], [616.0, 769.3333333333334], [619.0, 763.0], [620.0, 518.0], [625.0, 550.5], [624.0, 764.25], [626.0, 521.0], [627.0, 321.0], [628.0, 767.0], [629.0, 517.25], [631.0, 767.1428571428571], [630.0, 763.3333333333334], [635.0, 333.0], [633.0, 767.0], [632.0, 767.5], [613.0, 763.4285714285714], [611.0, 762.5], [610.0, 757.3333333333334], [608.0, 762.0], [623.0, 766.6666666666666], [622.0, 763.5], [621.0, 763.3333333333334], [637.0, 409.75], [638.0, 767.0], [639.0, 286.0], [644.0, 615.6666666666667], [640.0, 628.0], [655.0, 404.0], [654.0, 569.0], [653.0, 463.625], [652.0, 593.5555555555555], [651.0, 773.0], [650.0, 775.5], [649.0, 574.0], [648.0, 671.5], [641.0, 304.5], [643.0, 538.5], [642.0, 663.0], [660.0, 438.6666666666667], [661.0, 389.47058823529414], [663.0, 769.75], [659.0, 480.75], [646.0, 462.4117647058824], [645.0, 413.4], [647.0, 383.25], [666.0, 773.5], [664.0, 776.0], [667.0, 636.875], [668.0, 632.0], [669.0, 353.0], [671.0, 696.6363636363635], [670.0, 778.25], [658.0, 601.5], [676.0, 561.5], [683.0, 445.8], [672.0, 561.0], [675.0, 788.0], [674.0, 776.25], [673.0, 774.0], [687.0, 462.2727272727273], [677.0, 548.5], [678.0, 780.8], [696.0, 779.6666666666666], [679.0, 776.0], [697.0, 327.0], [699.0, 677.3333333333334], [698.0, 782.0], [700.0, 398.3333333333333], [703.0, 418.0], [689.0, 783.3333333333334], [691.0, 785.5], [690.0, 774.0], [702.0, 786.0], [701.0, 789.3333333333334], [692.0, 434.7868852459017], [694.0, 312.0], [693.0, 778.0], [695.0, 694.2], [680.0, 633.2222222222222], [681.0, 699.6666666666666], [682.0, 557.5], [685.0, 706.3333333333334], [684.0, 776.0], [686.0, 492.2142857142857], [729.0, 588.6842105263158], [722.0, 410.3333333333333], [724.0, 661.6666666666667], [723.0, 792.75], [725.0, 552.8000000000001], [726.0, 542.5555555555555], [727.0, 802.1666666666667], [728.0, 545.3333333333334], [711.0, 783.0], [710.0, 790.0], [709.0, 788.0], [707.0, 784.0], [706.0, 792.0], [705.0, 785.3333333333334], [704.0, 784.5], [719.0, 724.1666666666666], [717.0, 600.0], [718.0, 787.5], [716.0, 602.0], [715.0, 397.64285714285717], [714.0, 797.5], [713.0, 788.6], [712.0, 788.0], [730.0, 549.8571428571429], [731.0, 625.0], [732.0, 499.3448275862069], [733.0, 530.5], [734.0, 674.5], [735.0, 647.5294117647059], [721.0, 797.0], [720.0, 799.0], [760.0, 726.8333333333333], [764.0, 784.8], [766.0, 690.4444444444446], [765.0, 832.1666666666666], [767.0, 833.0], [763.0, 594.0], [762.0, 806.5714285714286], [761.0, 588.0], [750.0, 723.888888888889], [736.0, 597.5], [751.0, 831.0], [739.0, 776.5], [738.0, 825.3333333333334], [737.0, 800.5714285714286], [741.0, 769.3333333333334], [740.0, 757.0], [743.0, 748.3333333333334], [742.0, 754.3333333333334], [749.0, 640.75], [747.0, 793.0], [748.0, 827.0], [746.0, 612.0], [745.0, 769.25], [758.0, 680.5555555555554], [756.0, 784.3333333333334], [753.0, 687.1249999999999], [755.0, 837.5], [752.0, 738.4285714285713], [793.0, 746.0], [798.0, 657.0], [799.0, 724.4545454545455], [787.0, 779.0], [786.0, 837.8], [785.0, 833.0], [784.0, 768.3333333333334], [789.0, 807.3333333333334], [788.0, 741.25], [797.0, 778.3333333333333], [796.0, 832.0], [795.0, 777.2499999999999], [794.0, 651.0], [792.0, 727.1], [775.0, 807.375], [773.0, 806.2857142857143], [774.0, 830.0], [772.0, 770.5714285714287], [770.0, 788.1111111111111], [771.0, 830.0], [769.0, 736.0], [768.0, 744.4], [783.0, 704.8333333333333], [782.0, 705.0], [781.0, 837.0], [780.0, 629.6666666666666], [778.0, 629.5], [779.0, 831.3333333333334], [777.0, 694.0], [776.0, 692.5], [791.0, 668.25], [790.0, 772.6666666666666], [802.0, 754.0], [811.0, 736.6428571428572], [801.0, 770.4], [814.0, 794.9999999999999], [815.0, 756.5], [812.0, 772.2], [813.0, 799.5454545454546], [803.0, 691.5], [804.0, 833.0], [805.0, 761.8], [807.0, 748.0], [806.0, 840.0], [825.0, 731.7142857142858], [826.0, 753.5714285714287], [827.0, 709.9250000000002], [831.0, 807.4615384615385], [830.0, 839.6666666666666], [829.0, 832.5714285714286], [828.0, 835.8333333333334], [816.0, 761.3333333333333], [818.0, 801.375], [817.0, 715.0], [819.0, 728.6666666666667], [820.0, 705.9], [821.0, 675.0], [823.0, 828.5], [822.0, 833.2222222222222], [808.0, 714.9166666666667], [809.0, 756.0], [810.0, 747.7272727272726], [863.0, 773.5882352941177], [853.0, 764.1363636363636], [854.0, 761.5454545454545], [855.0, 786.4545454545454], [856.0, 778.2857142857143], [839.0, 742.0], [838.0, 781.4], [837.0, 829.0], [836.0, 826.8], [835.0, 782.7777777777778], [832.0, 769.4], [833.0, 830.0], [847.0, 769.5714285714286], [842.0, 769.5], [845.0, 818.1333333333333], [844.0, 823.3333333333334], [840.0, 818.75], [841.0, 818.0], [858.0, 783.1428571428571], [862.0, 794.5], [861.0, 770.0], [860.0, 772.8], [859.0, 781.3333333333333], [852.0, 814.0], [851.0, 778.0], [850.0, 796.75], [848.0, 782.8333333333334], [849.0, 811.6666666666666], [869.0, 819.0], [866.0, 790.0000000000001], [868.0, 819.6], [867.0, 820.3333333333333], [870.0, 839.2142857142857], [890.0, 851.1578947368423], [889.0, 848.6666666666666], [891.0, 850.6666666666667], [888.0, 848.1], [893.0, 863.25], [892.0, 855.4], [895.0, 862.0], [880.0, 836.6666666666666], [882.0, 842.2727272727273], [881.0, 837.0], [894.0, 856.0], [873.0, 813.6923076923077], [874.0, 816.5], [876.0, 831.6], [875.0, 829.8571428571429], [878.0, 847.75], [879.0, 837.2857142857142], [883.0, 844.8], [884.0, 843.2], [885.0, 852.0], [886.0, 837.6666666666666], [887.0, 845.0], [902.0, 936.6086956521739], [897.0, 877.8857142857142], [898.0, 881.3571428571428], [901.0, 916.2727272727273], [900.0, 876.2], [899.0, 872.6666666666666], [896.0, 860.8888888888889], [911.0, 904.6666666666666], [910.0, 888.6923076923076], [909.0, 985.4], [908.0, 908.0], [907.0, 898.5999999999999], [905.0, 1001.6666666666666], [906.0, 875.75], [904.0, 950.1428571428571], [927.0, 942.6666666666666], [913.0, 892.0], [912.0, 889.6666666666666], [916.0, 947.6666666666667], [915.0, 898.6666666666666], [914.0, 911.7741935483871], [918.0, 913.8799999999999], [919.0, 898.0], [917.0, 910.125], [926.0, 911.8888888888889], [925.0, 963.6666666666667], [924.0, 940.1250000000001], [922.0, 944.8571428571429], [921.0, 903.3888888888889], [920.0, 965.3333333333334], [903.0, 922.0], [934.0, 1007.3333333333334], [945.0, 924.75], [946.0, 923.3750000000001], [943.0, 1029.0], [947.0, 990.0999999999999], [942.0, 928.4374999999999], [941.0, 909.2], [940.0, 940.6], [938.0, 970.75], [939.0, 918.0], [936.0, 1020.0], [937.0, 914.4374999999999], [948.0, 917.6999999999999], [949.0, 929.75], [950.0, 909.2], [952.0, 911.4705882352943], [935.0, 922.4666666666667], [933.0, 939.2], [932.0, 915.5], [931.0, 953.7272727272726], [929.0, 921.875], [930.0, 911.904761904762], [928.0, 944.2727272727273], [953.0, 920.0000000000001], [954.0, 931.9166666666666], [959.0, 900.0], [944.0, 914.1111111111112], [958.0, 898.95], [957.0, 879.5], [956.0, 889.1666666666667], [955.0, 886.25], [966.0, 958.6], [962.0, 895.4285714285714], [961.0, 940.0], [975.0, 933.6428571428572], [960.0, 901.9333333333333], [963.0, 892.125], [964.0, 899.8484848484846], [965.0, 947.9090909090909], [976.0, 971.3333333333334], [989.0, 925.1428571428572], [988.0, 910.9420289855071], [987.0, 903.0], [990.0, 929.5882352941176], [991.0, 923.2647058823529], [985.0, 920.3333333333334], [984.0, 905.0], [967.0, 911.3846153846152], [986.0, 908.2121212121211], [977.0, 928.7428571428572], [978.0, 938.8536585365853], [980.0, 968.891304347826], [979.0, 940.8787878787879], [981.0, 935.3333333333334], [982.0, 937.923076923077], [983.0, 913.6341463414635], [969.0, 900.1428571428571], [968.0, 932.9166666666666], [970.0, 915.5], [971.0, 928.439024390244], [972.0, 935.3448275862067], [973.0, 927.6], [996.0, 907.7657657657658], [992.0, 930.8846153846155], [1000.0, 943.0123620909893], [999.0, 884.421052631579], [998.0, 880.3580246913582], [997.0, 869.2099447513807], [995.0, 896.6129032258065], [994.0, 911.6726190476188], [993.0, 926.25]], "isOverall": false, "label": "dynamic: hello world", "isController": false}, {"data": [[990.1632899999973, 935.3196799999911]], "isOverall": false, "label": "dynamic: hello world-Aggregated", "isController": false}, {"data": [[318.0, 113.0], [306.0, 81.05263157894737], [311.0, 123.0], [310.0, 122.33333333333334], [309.0, 110.44444444444444], [319.0, 89.66666666666666], [317.0, 99.15384615384616], [316.0, 104.0], [315.0, 85.22222222222223], [314.0, 2.0], [313.0, 91.5], [312.0, 89.33333333333333], [334.0, 144.0], [332.0, 105.5], [323.0, 74.6], [322.0, 105.0], [321.0, 85.54545454545456], [320.0, 134.0], [327.0, 4.0], [331.0, 77.5], [330.0, 111.07692307692308], [329.0, 51.285714285714285], [328.0, 93.0], [335.0, 4.0], [326.0, 116.25], [325.0, 110.4], [324.0, 60.5], [348.0, 10.75], [346.0, 62.0], [345.0, 147.0], [344.0, 103.0], [343.0, 82.5], [341.0, 45.42857142857143], [340.0, 98.0], [339.0, 53.66666666666667], [338.0, 51.0], [354.0, 112.5], [355.0, 91.83333333333334], [356.0, 142.33333333333331], [357.0, 154.0], [358.0, 98.0], [366.0, 4.333333333333333], [365.0, 5.0], [359.0, 7.0], [353.0, 8.0], [381.0, 4.0], [378.0, 3.0], [377.0, 5.0], [372.0, 3.0], [371.0, 3.5], [386.0, 112.0], [384.0, 179.0], [387.0, 47.857142857142854], [388.0, 169.0], [392.0, 70.42857142857143], [396.0, 212.0], [397.0, 193.5], [393.0, 7.0], [385.0, 5.5], [412.0, 225.0], [411.0, 4.8], [408.0, 9.0], [402.0, 5.0], [401.0, 5.0], [416.0, 52.375], [418.0, 188.0], [421.0, 190.0], [422.0, 218.0], [423.0, 190.0], [429.0, 111.25000000000001], [431.0, 243.0], [428.0, 3.0], [420.0, 7.0], [433.0, 111.0], [437.0, 218.5], [438.0, 117.75], [439.0, 250.0], [440.0, 35.4], [441.0, 183.6], [444.0, 159.8], [435.0, 6.666666666666667], [445.0, 111.5], [436.0, 4.333333333333333], [449.0, 265.0], [451.0, 251.33333333333334], [456.0, 202.0], [458.0, 229.16666666666666], [462.0, 5.0], [453.0, 6.5], [450.0, 4.428571428571429], [466.0, 234.53846153846158], [467.0, 178.0], [469.0, 147.0], [468.0, 3.0], [472.0, 196.5], [473.0, 257.6666666666667], [478.0, 3.5], [474.0, 2.0], [471.0, 3.0], [470.0, 4.0], [491.0, 173.33333333333331], [480.0, 198.0], [488.0, 208.0], [493.0, 49.0], [492.0, 4.0], [486.0, 3.8], [499.0, 53.5], [497.0, 97.0], [496.0, 93.0], [498.0, 98.0], [500.0, 20.599999999999998], [502.0, 95.4], [504.0, 76.5], [511.0, 4.6], [508.0, 4.0], [505.0, 38.25], [507.0, 384.0], [526.0, 7.0], [514.0, 141.0], [517.0, 5.4], [516.0, 4.0], [521.0, 4.0], [522.0, 3.0], [525.0, 10.5], [530.0, 347.0], [533.0, 12.5], [535.0, 11.5], [536.0, 13.0], [537.0, 5.0], [528.0, 4.0], [549.0, 31.0], [544.0, 3.833333333333333], [546.0, 28.333333333333332], [545.0, 0.0], [550.0, 10.0], [551.0, 37.0], [553.0, 146.0], [556.0, 3.0], [555.0, 3.0], [557.0, 10.0], [558.0, 193.0], [559.0, 5.0], [561.0, 105.0], [560.0, 5.0], [571.0, 434.0], [573.0, 4.666666666666667], [572.0, 2.0], [574.0, 447.0], [562.0, 162.4], [564.0, 205.0], [565.0, 208.0], [566.0, 56.99999999999999], [567.0, 3.5], [603.0, 328.4], [581.0, 397.0], [585.0, 26.5], [584.0, 5.666666666666667], [586.0, 4.0], [589.0, 4.666666666666667], [577.0, 4.0], [580.0, 3.3333333333333335], [579.0, 3.0], [587.0, 2.0], [592.0, 36.0], [606.0, 299.2], [607.0, 277.0], [593.0, 83.0], [594.0, 169.5], [596.0, 4.75], [597.0, 79.25], [599.0, 4.0], [598.0, 4.0], [600.0, 293.0], [602.0, 3.0], [604.0, 78.25], [605.0, 317.0], [610.0, 303.0], [608.0, 56.166666666666664], [612.0, 377.5], [613.0, 4.0], [615.0, 273.0], [621.0, 142.5], [622.0, 58.8], [620.0, 277.0], [619.0, 4.0], [617.0, 3.0], [623.0, 280.0], [625.0, 85.0], [638.0, 19.0], [636.0, 4.333333333333333], [633.0, 4.0], [632.0, 3.6666666666666665], [639.0, 175.0], [628.0, 75.5], [629.0, 293.0], [631.0, 5.8], [630.0, 3.0], [665.0, 31.0], [643.0, 297.2], [640.0, 96.42857142857143], [654.0, 611.0], [653.0, 163.0], [652.0, 362.4285714285714], [651.0, 360.6], [650.0, 117.66666666666667], [649.0, 151.33333333333331], [641.0, 315.0], [642.0, 242.6], [644.0, 61.87500000000001], [645.0, 361.5], [661.0, 66.4], [660.0, 384.4], [659.0, 668.0], [664.0, 16.0], [647.0, 529.3076923076924], [669.0, 51.0], [668.0, 2.5], [667.0, 5.5], [666.0, 5.0], [671.0, 4.2], [670.0, 4.666666666666667], [657.0, 657.0], [656.0, 590.5], [658.0, 385.8], [646.0, 311.4888888888889], [685.0, 44.0], [677.0, 27.0], [674.0, 6.75], [678.0, 12.545454545454545], [679.0, 32.0], [696.0, 82.66666666666666], [697.0, 25.333333333333332], [698.0, 46.42857142857143], [699.0, 71.625], [702.0, 7.0], [701.0, 5.5], [703.0, 43.25], [691.0, 13.333333333333332], [689.0, 3.0], [692.0, 88.29285714285714], [693.0, 15.0], [694.0, 190.25], [695.0, 23.750000000000004], [681.0, 20.0], [682.0, 25.66666666666667], [683.0, 39.2], [686.0, 322.82758620689657], [687.0, 261.0222222222222], [732.0, 35.840579710144915], [725.0, 84.11111111111111], [726.0, 111.78571428571429], [727.0, 4.5], [722.0, 10.157894736842104], [724.0, 3.6666666666666665], [723.0, 5.0], [728.0, 5.0], [710.0, 4.0], [706.0, 4.0], [704.0, 8.0], [729.0, 10.6875], [730.0, 3.0], [721.0, 3.166666666666667], [734.0, 35.75], [735.0, 45.35714285714286], [720.0, 3.3333333333333335], [719.0, 3.0], [715.0, 97.41379310344827], [714.0, 4.666666666666667], [712.0, 5.5], [716.0, 3.0], [718.0, 3.0], [717.0, 3.0], [753.0, 116.0], [766.0, 7.166666666666667], [765.0, 4.0], [763.0, 3.0], [761.0, 2.0], [743.0, 3.0], [762.0, 3.3000000000000003], [741.0, 78.0], [740.0, 62.111111111111114], [739.0, 44.4], [737.0, 13.222222222222221], [758.0, 5.5], [755.0, 53.5], [754.0, 107.0], [752.0, 97.31250000000001], [767.0, 5.0], [750.0, 81.69230769230768], [749.0, 50.57142857142857], [748.0, 6.0], [747.0, 4.5], [746.0, 65.78125000000001], [745.0, 43.1], [792.0, 4.777777777777779], [785.0, 9.666666666666666], [799.0, 48.4], [797.0, 6.4], [795.0, 5.3], [793.0, 2.0], [781.0, 5.5], [768.0, 3.3333333333333335], [782.0, 5.2], [774.0, 3.333333333333333], [773.0, 6.25], [772.0, 4.333333333333333], [771.0, 3.0], [770.0, 4.0], [775.0, 3.0], [769.0, 3.0], [780.0, 10.0], [776.0, 6.0], [790.0, 3.0], [789.0, 3.6], [786.0, 5.222222222222222], [784.0, 4.0], [807.0, 8.714285714285714], [802.0, 5.0], [801.0, 4.0], [814.0, 7.555555555555555], [815.0, 8.0], [812.0, 10.8], [813.0, 9.2], [803.0, 6.166666666666666], [804.0, 14.0], [806.0, 6.285714285714286], [816.0, 15.11111111111111], [831.0, 21.222222222222225], [830.0, 17.250000000000004], [829.0, 11.0], [828.0, 5.5], [826.0, 10.461538461538465], [827.0, 20.857142857142854], [824.0, 18.0], [825.0, 13.5], [817.0, 20.0], [819.0, 11.953488372093023], [818.0, 4.75], [820.0, 9.90909090909091], [821.0, 6.333333333333333], [822.0, 9.125], [808.0, 13.727272727272727], [809.0, 11.666666666666666], [810.0, 6.416666666666667], [811.0, 8.692307692307692], [861.0, 4.25], [853.0, 35.89999999999999], [854.0, 9.090909090909092], [855.0, 5.5], [856.0, 18.125], [837.0, 5.571428571428572], [836.0, 83.0], [835.0, 25.0], [832.0, 83.5], [847.0, 104.5], [846.0, 105.0], [845.0, 6.684210526315789], [842.0, 95.0], [841.0, 96.0], [840.0, 10.666666666666666], [857.0, 13.0], [858.0, 10.75], [860.0, 5.666666666666667], [859.0, 9.875000000000002], [862.0, 15.0], [848.0, 23.142857142857142], [863.0, 6.571428571428571], [850.0, 11.0], [851.0, 0.6666666666666666], [849.0, 2.0], [852.0, 15.375], [871.0, 15.6], [877.0, 7.0], [865.0, 1.0], [866.0, 7.166666666666666], [869.0, 13.25], [868.0, 4.0], [867.0, 6.1875], [870.0, 5.692307692307692], [881.0, 4.0], [894.0, 10.0], [893.0, 4.384615384615384], [892.0, 6.249999999999999], [890.0, 5.666666666666666], [891.0, 4.333333333333333], [889.0, 5.833333333333333], [888.0, 8.266666666666667], [882.0, 5.470588235294119], [883.0, 7.0], [884.0, 7.0], [886.0, 7.0], [887.0, 6.8], [873.0, 5.384615384615384], [875.0, 5.75], [876.0, 8.0], [879.0, 6.700000000000001], [878.0, 3.75], [900.0, 4.444444444444445], [897.0, 8.586206896551726], [898.0, 5.5625], [899.0, 11.636363636363637], [901.0, 15.249999999999998], [896.0, 8.083333333333334], [911.0, 21.11111111111111], [910.0, 4.166666666666667], [909.0, 21.750000000000004], [908.0, 36.900000000000006], [907.0, 9.000000000000002], [906.0, 3.0], [905.0, 62.0], [904.0, 50.75], [902.0, 16.0], [924.0, 1.25], [926.0, 5.25], [925.0, 2.7777777777777777], [913.0, 1.5], [912.0, 45.0], [917.0, 5.357142857142858], [915.0, 3.7142857142857144], [918.0, 4.687499999999999], [914.0, 4.333333333333335], [921.0, 3.7058823529411766], [920.0, 3.0], [934.0, 3.3333333333333335], [946.0, 5.0], [947.0, 7.6], [944.0, 5.0], [945.0, 5.25], [957.0, 7.5], [956.0, 6.142857142857143], [955.0, 5.0], [958.0, 4.157894736842106], [959.0, 2.0], [953.0, 5.833333333333333], [952.0, 4.5], [935.0, 6.722222222222222], [933.0, 4.333333333333334], [928.0, 4.1], [929.0, 4.545454545454545], [931.0, 3.8], [930.0, 5.0476190476190474], [932.0, 3.5], [954.0, 5.179999999999997], [942.0, 4.785714285714286], [948.0, 7.0], [949.0, 10.578947368421053], [941.0, 3.75], [940.0, 5.0], [939.0, 3.833333333333333], [938.0, 2.0], [936.0, 2.0], [937.0, 4.555555555555555], [950.0, 20.4], [951.0, 12.0], [967.0, 4.583333333333334], [963.0, 9.000000000000002], [960.0, 4.72972972972973], [973.0, 5.0], [975.0, 5.249999999999999], [971.0, 5.382352941176469], [972.0, 3.903225806451613], [961.0, 13.999999999999998], [962.0, 10.181818181818182], [964.0, 5.617647058823531], [965.0, 6.25], [966.0, 6.333333333333333], [976.0, 14.714285714285717], [990.0, 5.270833333333332], [989.0, 5.285714285714286], [988.0, 5.4347826086956506], [987.0, 5.666666666666667], [991.0, 6.38235294117647], [984.0, 10.833333333333334], [985.0, 5.0], [986.0, 6.361111111111111], [977.0, 6.03030303030303], [978.0, 4.675675675675677], [979.0, 6.375000000000001], [980.0, 7.914893617021274], [981.0, 9.6], [982.0, 2.5555555555555554], [983.0, 6.048780487804878], [969.0, 10.499999999999998], [968.0, 5.555555555555555], [970.0, 7.0], [996.0, 5.7293577981651325], [992.0, 6.241379310344827], [993.0, 6.8], [995.0, 5.138888888888889], [998.0, 4.487499999999999], [1000.0, 5.922477861284996], [999.0, 4.634146341463415], [997.0, 5.620879120879124], [994.0, 5.59036144578313]], "isOverall": false, "label": "static: get from cache", "isController": false}, {"data": [[991.8229700000064, 7.542340000000079]], "isOverall": false, "label": "static: get from cache-Aggregated", "isController": false}, {"data": [[317.0, 0.0], [306.0, 1.0], [335.0, 0.6666666666666666], [329.0, 0.75], [325.0, 1.0], [324.0, 1.0], [321.0, 1.0], [347.0, 1.0], [341.0, 1.0], [337.0, 0.0], [366.0, 0.3333333333333333], [365.0, 0.0], [363.0, 1.0], [358.0, 0.0], [357.0, 0.0], [355.0, 0.0], [353.0, 1.0], [352.0, 1.0], [381.0, 1.0], [377.0, 1.0], [376.0, 0.5], [371.0, 1.0], [370.0, 1.0], [396.0, 46.699999999999996], [386.0, 4.0], [387.0, 9.363636363636363], [388.0, 27.5], [390.0, 22.0], [391.0, 29.0], [385.0, 0.625], [393.0, 26.75], [397.0, 51.0], [399.0, 37.4], [392.0, 0.2], [401.0, 32.0], [400.0, 48.0], [402.0, 28.500000000000004], [404.0, 52.5], [405.0, 63.0], [407.0, 32.0], [408.0, 34.5], [409.0, 66.33333333333333], [411.0, 1.25], [412.0, 72.0], [413.0, 43.0], [414.0, 44.0], [417.0, 58.0], [416.0, 14.0], [418.0, 57.8], [419.0, 53.0], [420.0, 19.42857142857143], [421.0, 29.666666666666668], [422.0, 9.0], [423.0, 76.0], [426.0, 84.0], [431.0, 72.5], [429.0, 0.0], [428.0, 1.0], [434.0, 3.0], [433.0, 7.5], [435.0, 2.6], [444.0, 1.0], [445.0, 3.1538461538461533], [447.0, 2.0], [437.0, 6.0], [436.0, 0.0], [438.0, 1.3333333333333335], [439.0, 63.0], [440.0, 1.0], [441.0, 1.5], [442.0, 1.6666666666666667], [449.0, 5.0], [454.0, 1.0], [458.0, 8.0], [462.0, 0.0], [453.0, 1.0], [450.0, 0.6], [464.0, 9.5], [466.0, 18.0], [473.0, 19.0], [479.0, 8.0], [478.0, 1.0], [471.0, 0.0], [470.0, 0.5], [482.0, 13.0], [481.0, 8.5], [483.0, 17.0], [484.0, 27.0], [486.0, 8.625], [488.0, 30.0], [489.0, 21.5], [491.0, 16.0], [490.0, 1.0], [493.0, 57.0], [492.0, 0.0], [509.0, 219.0], [500.0, 1.6666666666666667], [502.0, 1.0], [506.0, 5.0], [507.0, 4.0], [511.0, 36.0], [508.0, 0.0], [499.0, 2.0], [497.0, 1.0], [505.0, 1.0], [504.0, 0.0], [524.0, 15.0], [513.0, 217.0], [514.0, 224.0], [516.0, 83.33333333333334], [537.0, 0.5], [517.0, 0.0], [541.0, 8.0], [542.0, 239.0], [528.0, 0.0], [529.0, 117.5], [530.0, 5.0], [531.0, 6.0], [535.0, 0.0], [520.0, 11.0], [521.0, 47.400000000000006], [523.0, 235.0], [525.0, 162.0], [526.0, 6.0], [545.0, 69.5], [544.0, 30.22222222222222], [559.0, 0.0], [548.0, 17.0], [549.0, 19.0], [553.0, 178.66666666666669], [552.0, 0.0], [555.0, 97.66666666666666], [557.0, 273.0], [556.0, 0.5], [558.0, 20.0], [562.0, 11.0], [560.0, 0.33333333333333337], [572.0, 141.0], [573.0, 62.8], [568.0, 143.5], [570.0, 0.0], [571.0, 10.0], [564.0, 9.0], [567.0, 73.0], [566.0, 1.0], [565.0, 0.0], [583.0, 302.0], [577.0, 179.4], [576.0, 34.0], [585.0, 72.2], [584.0, 0.75], [586.0, 1.0], [589.0, 0.0], [588.0, 1.0], [580.0, 147.0], [579.0, 1.0], [590.0, 302.0], [592.0, 12.5], [607.0, 9.5], [605.0, 16.0], [606.0, 12.333333333333332], [600.0, 4.0], [602.0, 1.3333333333333333], [604.0, 4.0], [593.0, 9.666666666666666], [598.0, 301.0], [597.0, 0.0], [596.0, 1.0], [599.0, 1.0], [633.0, 9.0], [617.0, 9.5], [619.0, 0.6666666666666666], [620.0, 28.0], [622.0, 13.5], [621.0, 0.2], [632.0, 1.0], [613.0, 0.0], [612.0, 0.0], [611.0, 1.0], [608.0, 0.6666666666666666], [625.0, 9.0], [627.0, 21.0], [628.0, 0.6666666666666667], [629.0, 19.4], [631.0, 0.0], [630.0, 0.75], [635.0, 28.5], [637.0, 1.0], [636.0, 0.33333333333333337], [638.0, 14.4], [639.0, 35.0], [644.0, 94.55555555555557], [640.0, 28.333333333333332], [651.0, 157.0], [648.0, 335.6666666666667], [649.0, 0.6666666666666667], [652.0, 353.38461538461536], [654.0, 486.5], [653.0, 351.6], [655.0, 488.75], [642.0, 27.875], [643.0, 24.666666666666664], [660.0, 366.6363636363637], [661.0, 94.22222222222223], [663.0, 178.0], [646.0, 126.35], [645.0, 156.5], [647.0, 369.9473684210526], [664.0, 296.0], [666.0, 88.5], [667.0, 0.25], [668.0, 261.66666666666663], [669.0, 196.5], [670.0, 0.33333333333333337], [671.0, 80.4], [657.0, 425.7], [656.0, 492.6666666666667], [659.0, 400.0], [658.0, 350.57142857142856], [677.0, 35.0], [678.0, 14.749999999999998], [697.0, 17.5], [698.0, 11.0], [699.0, 21.000000000000004], [700.0, 36.25], [701.0, 4.5], [703.0, 31.36842105263158], [690.0, 0.0], [702.0, 0.0], [696.0, 3.5], [681.0, 15.5], [682.0, 65.75], [683.0, 16.900000000000002], [686.0, 26.466666666666665], [687.0, 23.193548387096776], [676.0, 0.6666666666666666], [674.0, 0.75], [692.0, 50.44785276073618], [694.0, 99.66666666666667], [695.0, 8.666666666666666], [693.0, 99.5], [731.0, 16.0], [725.0, 80.9090909090909], [724.0, 1.0], [722.0, 0.0], [721.0, 0.0], [720.0, 1.0], [734.0, 25.640000000000004], [735.0, 26.857142857142854], [726.0, 80.00000000000001], [727.0, 1.75], [728.0, 69.75000000000001], [711.0, 0.0], [710.0, 0.5], [706.0, 0.3333333333333333], [705.0, 1.0], [729.0, 9.25], [730.0, 18.846153846153847], [732.0, 25.77192982456139], [733.0, 49.0], [719.0, 37.0], [715.0, 138.36], [714.0, 1.0], [716.0, 1.0], [718.0, 1.0], [717.0, 1.0], [752.0, 70.5], [755.0, 67.33333333333334], [758.0, 1.0], [754.0, 101.0], [753.0, 93.0], [750.0, 46.0], [747.0, 0.0], [751.0, 1.0], [739.0, 14.666666666666668], [737.0, 0.375], [736.0, 40.0], [746.0, 87.25], [745.0, 43.33333333333333], [741.0, 62.0], [762.0, 0.5], [743.0, 0.0], [765.0, 0.6], [764.0, 1.0], [767.0, 1.0], [766.0, 0.0], [740.0, 37.0], [797.0, 0.5], [799.0, 222.0], [774.0, 133.0], [782.0, 1.5], [769.0, 0.75], [768.0, 1.0], [771.0, 0.0], [770.0, 0.25], [773.0, 0.625], [772.0, 0.0], [781.0, 0.75], [776.0, 0.0], [796.0, 0.0], [795.0, 0.75], [792.0, 0.8571428571428571], [775.0, 0.3333333333333333], [789.0, 0.33333333333333337], [786.0, 0.2], [784.0, 0.0], [803.0, 4.249999999999999], [811.0, 4.9], [802.0, 7.0], [814.0, 5.571428571428571], [815.0, 7.0], [806.0, 1.8888888888888888], [807.0, 7.571428571428572], [816.0, 12.0], [827.0, 19.466666666666665], [828.0, 0.6666666666666666], [830.0, 6.0], [829.0, 1.0], [831.0, 9.125], [825.0, 2.25], [826.0, 7.125], [817.0, 15.375000000000002], [818.0, 11.857142857142858], [819.0, 8.2], [820.0, 5.849999999999999], [821.0, 3.5], [822.0, 1.8749999999999998], [808.0, 10.684210526315788], [809.0, 12.299999999999999], [810.0, 2.1818181818181817], [812.0, 6.666666666666667], [813.0, 4.083333333333333], [860.0, 1.0], [853.0, 51.35714285714285], [854.0, 8.272727272727273], [855.0, 3.1333333333333333], [856.0, 3.0], [838.0, 83.08333333333333], [837.0, 14.833333333333332], [836.0, 3.0], [835.0, 36.57142857142857], [833.0, 109.0], [832.0, 59.833333333333336], [847.0, 98.71428571428572], [845.0, 9.90909090909091], [844.0, 2.25], [842.0, 46.0], [840.0, 12.857142857142858], [857.0, 8.75], [858.0, 4.8181818181818175], [859.0, 1.0], [861.0, 1.4444444444444444], [863.0, 0.9999999999999999], [850.0, 39.833333333333336], [849.0, 2.0], [848.0, 46.2], [852.0, 46.54545454545454], [870.0, 1.1818181818181817], [876.0, 12.0], [866.0, 1.8181818181818181], [865.0, 2.0], [877.0, 3.0], [878.0, 0.375], [879.0, 3.846153846153845], [869.0, 2.5555555555555554], [868.0, 0.5], [867.0, 0.5714285714285714], [871.0, 8.0], [893.0, 6.166666666666666], [880.0, 0.0], [892.0, 0.8666666666666667], [891.0, 0.5], [890.0, 0.4375], [889.0, 0.25], [888.0, 8.045454545454547], [881.0, 3.0], [882.0, 4.8125], [883.0, 3.625], [884.0, 9.5], [885.0, 13.666666666666666], [886.0, 5.874999999999999], [887.0, 3.0], [873.0, 5.52], [874.0, 7.5], [875.0, 1.0], [900.0, 1.2222222222222223], [897.0, 6.777777777777777], [898.0, 3.3043478260869565], [899.0, 9.444444444444445], [901.0, 7.7368421052631575], [896.0, 5.0], [911.0, 9.375], [910.0, 15.833333333333332], [909.0, 25.8], [908.0, 38.99999999999999], [907.0, 16.923076923076923], [906.0, 44.66666666666667], [905.0, 57.0], [904.0, 24.0], [902.0, 19.903225806451616], [914.0, 7.038461538461538], [917.0, 0.7], [915.0, 0.0], [919.0, 0.0], [918.0, 0.5625], [913.0, 100.0], [912.0, 64.75], [903.0, 52.0], [921.0, 0.75], [925.0, 0.5000000000000001], [924.0, 0.0], [926.0, 1.125], [954.0, 3.2888888888888888], [947.0, 1.9090909090909092], [942.0, 18.384615384615383], [949.0, 2.19047619047619], [948.0, 1.3333333333333335], [941.0, 13.777777777777779], [939.0, 0.5], [938.0, 0.33333333333333337], [937.0, 1.3333333333333333], [951.0, 11.0], [953.0, 2.7333333333333334], [952.0, 3.0000000000000004], [935.0, 0.857142857142857], [934.0, 1.0], [932.0, 0.0], [931.0, 0.7142857142857143], [930.0, 0.35000000000000003], [929.0, 0.6666666666666666], [928.0, 1.375], [957.0, 5.5], [956.0, 1.2857142857142856], [955.0, 1.0], [959.0, 0.0], [944.0, 1.0], [946.0, 1.8333333333333333], [945.0, 0.75], [958.0, 0.6315789473684211], [965.0, 6.636363636363636], [961.0, 11.918367346938775], [960.0, 2.5365853658536586], [974.0, 4.0], [975.0, 1.5625], [972.0, 0.5666666666666667], [973.0, 3.8], [970.0, 1.0833333333333335], [971.0, 1.743589743589744], [962.0, 3.153846153846154], [963.0, 4.36], [964.0, 2.114285714285714], [967.0, 0.5714285714285714], [984.0, 1.2941176470588236], [985.0, 3.333333333333333], [986.0, 1.3888888888888884], [987.0, 2.1666666666666665], [991.0, 2.828571428571429], [990.0, 1.1063829787234045], [989.0, 0.5000000000000001], [988.0, 0.6376811594202898], [966.0, 0.8571428571428572], [976.0, 4.0], [977.0, 1.5365853658536583], [978.0, 1.0789473684210527], [980.0, 1.7380952380952381], [979.0, 2.661016949152543], [983.0, 0.956521739130435], [982.0, 0.0], [968.0, 0.6], [969.0, 4.5625], [993.0, 1.5833333333333335], [992.0, 1.263157894736842], [995.0, 0.7499999999999998], [996.0, 1.1954545454545455], [998.0, 0.7215189873417722], [1000.0, 0.8782892670979043], [999.0, 0.4878048780487806], [997.0, 0.8950276243093925], [994.0, 1.3674698795180718]], "isOverall": false, "label": "static: get medium file", "isController": false}, {"data": [[992.6278099999982, 1.8766799999999972]], "isOverall": false, "label": "static: get medium file-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 104592.63333333333, "minX": 1.67058444E12, "maxY": 1.3766251031666666E8, "series": [{"data": [[1.6705845E12, 1.3766251031666666E8], [1.67058456E12, 3.420571193333333E7], [1.67058444E12, 4.3883444416666664E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6705845E12, 412614.38333333336], [1.67058456E12, 104592.63333333333], [1.67058444E12, 129459.65]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67058456E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.8602482525154378, "minX": 1.67058444E12, "maxY": 999.7750956269977, "series": [{"data": [[1.6705845E12, 933.5298395185566], [1.67058456E12, 868.0782975186988], [1.67058444E12, 999.7750956269977]], "isOverall": false, "label": "dynamic: hello world", "isController": false}, {"data": [[1.6705845E12, 5.927952354831143], [1.67058456E12, 5.406662040249824], [1.67058444E12, 14.269563507668094]], "isOverall": false, "label": "static: get from cache", "isController": false}, {"data": [[1.6705845E12, 0.8602482525154378], [1.67058456E12, 0.9022143713330393], [1.67058444E12, 5.824018089760602]], "isOverall": false, "label": "static: get medium file", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67058456E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.6396263674262626, "minX": 1.67058444E12, "maxY": 999.742840897346, "series": [{"data": [[1.6705845E12, 933.5120361083236], [1.67058456E12, 868.0651786774309], [1.67058444E12, 999.742840897346]], "isOverall": false, "label": "dynamic: hello world", "isController": false}, {"data": [[1.6705845E12, 5.91851735757384], [1.67058456E12, 5.398523752444638], [1.67058444E12, 14.224144710971249]], "isOverall": false, "label": "static: get from cache", "isController": false}, {"data": [[1.6705845E12, 0.6396263674262626], [1.67058456E12, 0.6760456753517178], [1.67058444E12, 5.16875583738876]], "isOverall": false, "label": "static: get medium file", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67058456E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67058444E12, "maxY": 2.1044534014942893, "series": [{"data": [[1.6705845E12, 1.5672016048144423E-5], [1.67058456E12, 0.0], [1.67058444E12, 0.0]], "isOverall": false, "label": "dynamic: hello world", "isController": false}, {"data": [[1.6705845E12, 0.0048742261578245995], [1.67058456E12, 0.0], [1.67058444E12, 2.1044534014942893]], "isOverall": false, "label": "static: get from cache", "isController": false}, {"data": [[1.6705845E12, 1.0970755101401062E-4], [1.67058456E12, 0.0], [1.67058444E12, 0.0]], "isOverall": false, "label": "static: get medium file", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67058456E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.67058444E12, "maxY": 1830.0, "series": [{"data": [[1.6705845E12, 1067.0], [1.67058456E12, 995.0], [1.67058444E12, 1830.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6705845E12, 933.0], [1.67058456E12, 886.0], [1.67058444E12, 941.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6705845E12, 961.0], [1.67058456E12, 935.0], [1.67058444E12, 971.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6705845E12, 945.0], [1.67058456E12, 904.0], [1.67058444E12, 956.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6705845E12, 0.0], [1.67058456E12, 0.0], [1.67058444E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6705845E12, 6.0], [1.67058456E12, 5.0], [1.67058444E12, 6.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67058456E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 682.0, "maxY": 476.0, "series": [{"data": [[682.0, 99.0], [1729.0, 9.0], [1837.0, 8.0], [1903.0, 71.0], [1899.0, 9.0], [1909.0, 476.0], [2100.0, 12.0], [2307.0, 7.0], [2893.0, 5.0], [3045.0, 6.0], [2990.0, 6.0], [3019.0, 6.0], [3014.0, 6.0], [3051.0, 5.0], [3032.0, 6.0], [3039.0, 6.0], [2949.0, 6.0], [2993.0, 6.0], [3043.0, 6.0], [3041.0, 6.0], [2996.0, 6.0], [3031.0, 6.0], [3179.0, 6.0], [3152.0, 6.0], [3074.0, 5.0], [3105.0, 6.0], [3110.0, 6.0], [3111.0, 5.0], [3154.0, 5.0], [3156.0, 5.0], [3117.0, 6.0], [3129.0, 6.0], [3124.0, 5.0], [3131.0, 6.0], [3122.0, 6.0], [3114.0, 6.0], [3157.0, 6.0], [3184.0, 5.0], [3187.0, 6.0], [3199.0, 6.0], [3144.0, 6.0], [3193.0, 6.0], [3195.0, 5.0], [3190.0, 6.0], [3085.0, 5.0], [3097.0, 6.0], [3169.0, 5.0], [3176.0, 6.0], [3180.0, 6.0], [3080.0, 6.0], [3079.0, 6.0], [3299.0, 5.0], [3247.0, 5.0], [3310.0, 5.0], [3302.0, 5.0], [3244.0, 6.0], [3238.0, 6.0], [3245.0, 5.0], [3287.0, 6.0], [3295.0, 6.0], [3280.0, 6.0], [3277.0, 5.0], [3279.0, 6.0], [3276.0, 6.0], [3253.0, 6.0], [3254.0, 6.0], [3256.0, 5.0], [3258.0, 6.0], [3202.0, 6.0], [3260.0, 6.0], [3205.0, 6.0], [3221.0, 6.0], [3214.0, 6.0], [3208.0, 6.0], [3219.0, 6.0], [3226.0, 6.0], [3311.0, 6.0], [3326.0, 6.0], [3266.0, 5.0], [3382.0, 5.0], [3334.0, 5.0], [3352.0, 5.0], [3436.0, 4.0], [3426.0, 5.0], [3369.0, 5.0], [3449.0, 5.0], [3397.0, 5.0], [3537.0, 4.0], [3560.0, 4.0], [3486.0, 5.0], [3657.0, 4.0], [3693.0, 4.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3693.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 682.0, "maxY": 475.0, "series": [{"data": [[682.0, 98.0], [1729.0, 9.0], [1837.0, 8.0], [1903.0, 62.0], [1899.0, 8.0], [1909.0, 475.0], [2100.0, 11.0], [2307.0, 7.0], [2893.0, 5.0], [3045.0, 6.0], [2990.0, 6.0], [3019.0, 6.0], [3014.0, 6.0], [3051.0, 5.0], [3032.0, 6.0], [3039.0, 6.0], [2949.0, 6.0], [2993.0, 6.0], [3043.0, 6.0], [3041.0, 6.0], [2996.0, 6.0], [3031.0, 6.0], [3179.0, 6.0], [3152.0, 6.0], [3074.0, 5.0], [3105.0, 5.0], [3110.0, 6.0], [3111.0, 5.0], [3154.0, 5.0], [3156.0, 5.0], [3117.0, 6.0], [3129.0, 6.0], [3124.0, 5.0], [3131.0, 6.0], [3122.0, 6.0], [3114.0, 6.0], [3157.0, 6.0], [3184.0, 5.0], [3187.0, 6.0], [3199.0, 6.0], [3144.0, 6.0], [3193.0, 6.0], [3195.0, 5.0], [3190.0, 6.0], [3085.0, 5.0], [3097.0, 6.0], [3169.0, 5.0], [3176.0, 6.0], [3180.0, 6.0], [3080.0, 6.0], [3079.0, 6.0], [3299.0, 5.0], [3247.0, 5.0], [3310.0, 5.0], [3302.0, 5.0], [3244.0, 6.0], [3238.0, 6.0], [3245.0, 5.0], [3287.0, 6.0], [3295.0, 6.0], [3280.0, 5.0], [3277.0, 5.0], [3279.0, 6.0], [3276.0, 6.0], [3253.0, 6.0], [3254.0, 6.0], [3256.0, 5.0], [3258.0, 6.0], [3202.0, 6.0], [3260.0, 6.0], [3205.0, 6.0], [3221.0, 6.0], [3214.0, 5.0], [3208.0, 6.0], [3219.0, 6.0], [3226.0, 5.0], [3311.0, 6.0], [3326.0, 5.0], [3266.0, 5.0], [3382.0, 5.0], [3334.0, 5.0], [3352.0, 5.0], [3436.0, 4.0], [3426.0, 4.0], [3369.0, 5.0], [3449.0, 5.0], [3397.0, 5.0], [3537.0, 4.0], [3560.0, 4.0], [3486.0, 5.0], [3657.0, 4.0], [3693.0, 4.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3693.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 792.4666666666667, "minX": 1.67058444E12, "maxY": 3190.3333333333335, "series": [{"data": [[1.6705845E12, 3190.3333333333335], [1.67058456E12, 792.4666666666667], [1.67058444E12, 1017.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67058456E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 809.1333333333333, "minX": 1.67058444E12, "maxY": 3190.3166666666666, "series": [{"data": [[1.6705845E12, 3190.3166666666666], [1.67058456E12, 809.1333333333333], [1.67058444E12, 1000.55]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67058456E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 264.18333333333334, "minX": 1.67058444E12, "maxY": 1063.4666666666667, "series": [{"data": [[1.6705845E12, 1063.4166666666667], [1.67058456E12, 264.18333333333334], [1.67058444E12, 339.06666666666666]], "isOverall": false, "label": "static: get from cache-success", "isController": false}, {"data": [[1.6705845E12, 1063.4333333333334], [1.67058456E12, 264.18333333333334], [1.67058444E12, 339.05]], "isOverall": false, "label": "static: get medium file-success", "isController": false}, {"data": [[1.6705845E12, 1063.4666666666667], [1.67058456E12, 280.76666666666665], [1.67058444E12, 322.43333333333334]], "isOverall": false, "label": "dynamic: hello world-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67058456E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 809.1333333333333, "minX": 1.67058444E12, "maxY": 3190.3166666666666, "series": [{"data": [[1.6705845E12, 3190.3166666666666], [1.67058456E12, 809.1333333333333], [1.67058444E12, 1000.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67058456E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

