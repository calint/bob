b
[ ] class_init extended to be able to set statics on any class
[ ] bob.js: server is busy message box when typing fast
[ ]   server busy ui element
[ ] fix for client that makes many threaded requests and then stalls them to starve server of threads or create too many. ddos.
[ ] thread pool: get first, create if none available
[ ] fix "// todo" comments
[ ]   websock: implement ping/pong
[ ] use java.util.concurrent
[ ]   b: request queue, thread pool
[ ]   dbo: connection pool
--------------------------------------------------------------------------------------------------------------------------------------------------------------
dbo
[o] review code. search for "// todo" "// !" "// ?"
[o] cluster
[x]   connections to multiple servers
[x]   write to all
[x]   read round robin. solved by the load balancer.
[x]   file with ips of cluster nodes
[x]   transactions on auto-commit
[x]   establish one jdbc connection to the other servers
[x]   all writes through a synchronized block writing to the other servers sequentially
[x]   step 2. all writes through a synchronized block
[x]   step 3. cluster server that synchronizes all writes
[x]   cluster server does sql in parallel
[x]   refresh connection every nth ms
[ ]   restore node with mysqldump
[ ]     pause the cluster writes
[ ]     mysqldump testdb | mysql -h ... etc
[ ]     start bob
[ ]     cluster listen
[ ]     resume cluster writes 
[ ] Db.tableNameForJavaClass does not include package name
[o] javadoc
[ ] Query.TableAliasMap: User -> u. if u present try us etc
[o] removing referenced DbObject. check and possibly fail or update to null? DbClass.List<RelRef>. setting on db update_referring
[x]   updates referring tables column to null
[ ]   objects in cache not updated. evict all objects of the referring type or iterate through cache and set null where field refers to deleted object
[x]   racing conditions. example object referring to deleted object is committed after the deletes. not resolvable
[x]   index on the referring field for delete ... where
[ ] Db.instance().makeConsistent() deleting RefN orphans, setting null on missing Ref etc 
[ ] Db.instance().delete(Index) Db.instance().create(Index) for faster imports?
[ ] check RelRef.set(id) vs RelRef.set(DbObject) check type? requires get() for id. still not safe. maybe when Db.mode_safe_ref_set=true
[o] Index(DbField...)
[x]    Collation asc (default)
[ ]    Collation desc
[o] Query(IndexFt,String)
[x]   IN BOOLEAN MODE (default)
[ ]   IN NATURAL LANGUAGE MODE
[ ]   IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION
[ ]   WITH QUERY EXPANSION
[ ] class OID instead of integer
[ ] FldString check string length vs field length at set? DbField.getSize()?
[ ] FldFloat max from Float.MAX_VALUE can not be committed
[ ] inheritance
[ ]   example: select t1.* from File where t1.clspth like 'aaabbb%'; selects all objects that are File or inherits from File given File clspth=aaabbb
[ ] components
[ ]   example: DbClass.addComponent(DbClassComponent) where DbClassComponent has fields, relations and indexes
[ ] refactor commands. example: rename main.User main.Person, rename main.User.name fullName, delete main.User.hashCode etc
[o] drivers for other (open source) rdbms. see https://www.databasestar.com/sql-data-types/
[x]   mysql
[ ]   sqlite
[ ]   postgresql
[ ]   oracle?
[ ]   ms sql server?
[ ]   ibm db2?
--------------------------------------------------------------------------------------------------------------------------------------------------------------
[x] req state to enum
[x] page that does not save state or access session
[x]   annotation regarding transaction and state saving, @stateless does not initiate transaction or reads/writes path object
[x] performance testing in qa
[x]   jmeter
[x]   ab
[x] xwriter: review
[x] css not allowed in the body tag but is supported by major browsers. keep.
[x] bob: review css for conformity
[x] bob,b: adaptive design for mobile users. <meta name="viewport" content="width=device-width,initial-scale=1"/> 
[x] content type for cached file from Map of suffix to content-type?
[x] cookie: same-site
[x] etag instead of last-modified
[x] review ranged requests
[x]   file
[x]   cache
[x] b.map_resource_to_path(String,String)
[x] oschunked to send first packet including the http response headers
[x] packet snooper to investigate and improve. tcpdump 
[x] dbo: better connection pool, close old connection etc
[x]   review code, the ugliness is overwhelming. Db.createJdbcConnection blocks at exception.
[x]   rework Db.initTransaction deintTransaction
[x] rework the websock
[x]   add send que
[x]   fix edge case
[x]     full duplex with thread for send? no.
[x] try b with 1B input buffer
[x] try b with socket small in/out buffers
-------------------------------------------------------------------------------
[x] better connection pool
[x]   thread safe
[x]   wait if connection pool is empty or create new connections? wait.
[x]   close connection after a number of recycles and create a new one
[x] log_sql()
[x] tn.get(new Class[]{User.class,File.class},...) returns List<DbObject[]>